<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->

<Page
    x:Class="WinUIGallery.ControlPages.TitleBarPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:WinUIGallery"
    xmlns:data="using:WinUIGallery.Data"
    xmlns:wuxdata="using:Microsoft.UI.Xaml.Data"
    mc:Ignorable="d">

    <Page.Resources>
        <x:Double x:Key="SwatchSize">32</x:Double>
    </Page.Resources>

    <StackPanel>
        <local:ControlExample HeaderText="Default TitleBar">
            <local:ControlExample.Example>
                <StackPanel Orientation="Vertical"
                            Spacing="10">
                    <TextBlock TextWrapping="WrapWholeWords">
Title bar caption controls are handled by Win32 TitleBar. Hence they are not visible in the sample below.
                    </TextBlock>
                    <TitleBar x:Name="DefaultTitleBar"
                              Title="Default TitleBar"
                              Subtitle="Preview">
                        <TitleBar.IconSource>
                            <SymbolIconSource Symbol="Home" />
                        </TitleBar.IconSource>
                    </TitleBar>
                </StackPanel>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Window x:Class="App1.MainWindow"
        xmlns:local="using:App1"
        mc:Ignorable="d"&gt;
    &lt;Grid&gt;
        &lt;Grid.RowDefinitions&gt;
            &lt;RowDefinition Height="Auto" /&gt; &lt;!-- WinUI TitleBar --&gt;
            &lt;RowDefinition Height="*" /&gt; &lt;!-- App content --&gt;
        &lt;/Grid.RowDefinitions&gt;
        &lt;TitleBar x:Name="DefaultTitleBar"
                Title="Default TitleBar"
                Subtitle="Preview"&gt;
            &lt;TitleBar.IconSource&gt;
                &lt;SymbolIconSource Symbol="Home" /&gt;
            &lt;/TitleBar.IconSource&gt;
        &lt;/TitleBar&gt;

        &lt;!-- App content --&gt;
    &lt;/Grid&gt;
&lt;/Window&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
public MainWindow()
{
    this.InitializeComponent();

    // C# code to set AppTitleBar UIElement as Titlebar
    Window window = this; 
    window.ExtendsContentIntoTitleBar = true;  // Enable custom titlebar
    window.SetTitleBar(this.DefaultTitleBar);
}
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>

        <local:ControlExample HeaderText="TitleBar with Integrated WinUI Controls" HorizontalContentAlignment="Stretch">
            <local:ControlExample.Example>
                <TitleBar x:Name="ControlsTitleBar"
                          Title="Controls TitleBar"
                          Subtitle="Preview">
                    <TitleBar.IconSource>
                        <ImageIconSource ImageSource="ms-appx:///Assets/Tiles/TitlebarLogo.png" />
                    </TitleBar.IconSource>
                    <AutoSuggestBox x:Name="AutoSuggestBoxInTitleBar"
                                    MinWidth="300"
                                    MaxWidth="500"
                                    Margin="8"
                                    PlaceholderText="Search pictures, videos or places..."
                                    QueryIcon="Find" />
                    <TitleBar.Footer>
                        <PersonPicture Width="30"
                                       Height="30"
                                       Initials="JD" />
                    </TitleBar.Footer>
                </TitleBar>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;TitleBar x:Name="ControlsTitleBar"
          Title="Controls TitleBar"
          Subtitle="Preview"&gt;
    &lt;TitleBar.IconSource&gt;
        &lt;ImageIconSource ImageSource="ms-appx:///Assets/Tiles/TitlebarLogo.png" /&gt;
    &lt;/TitleBar.IconSource&gt;
    &lt;AutoSuggestBox x:Name="AutoSuggestBoxInTitleBar"
                    MinWidth="300"
                    MaxWidth="500"
                    Margin="8"
                    PlaceholderText="Search pictures, videos or places..."
                    QueryIcon="Find" /&gt;
    &lt;TitleBar.Footer&gt;
        &lt;PersonPicture Width="30"
                       Height="30"
                       Initials="JD" /&gt;
    &lt;/TitleBar.Footer>
&lt;/TitleBar&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>
        
        <local:ControlExample HeaderText="TitleBar with NavigationView L-Pattern Integration"
                              HorizontalContentAlignment="Stretch">
            <local:ControlExample.Example>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TitleBar x:Name="NavViewTitleBar"
                              Title="NavView TitleBar"
                              Background="Transparent"
                              IsBackButtonVisible="True"
                              IsBackEnabled="{Binding ElementName=NavFrame, Path=CanGoBack, Mode=OneWay}"
                              IsPaneToggleButtonVisible="True"
                              BackRequested="NavViewTitleBar_BackRequested"
                              PaneToggleRequested="NavViewTitleBar_PaneToggleRequested">
                        <TitleBar.IconSource>
                            <SymbolIconSource Symbol="Home" />
                        </TitleBar.IconSource>

                        <AutoSuggestBox x:Name="AutoSuggestBoxInNavViewTitleBar"
                                        MinWidth="300"
                                        MaxWidth="500"
                                        Margin="8"
                                        PlaceholderText="Search pictures, videos or places..."
                                        QueryIcon="Find" />
                    </TitleBar>

                    <NavigationView x:Name="NavView"
                                    Grid.Row="1"
                                    IsPaneToggleButtonVisible="False"
                                    IsBackButtonVisible="Collapsed"
                                    SelectionChanged="NavigationView_SelectionChanged"
                                    Height="400">

                        <!-- TitleBar with NavigationView L-Pattern Overwriting resources -->
                        <NavigationView.Resources>
                            <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
                            <!-- This is the rounded corner on the Top left of the L Pattern -->
                            <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
                        </NavigationView.Resources>

                        <Frame x:Name="NavFrame" />

                        <NavigationView.MenuItems>
                            <NavigationViewItem Content="Home"
                                                Icon="Home"
                                                Tag="SamplePage1"/>
                            <NavigationViewItem Content="Map"
                                                Icon="Map"
                                                Tag="SamplePage2"/>
                        </NavigationView.MenuItems>
                    </NavigationView>
                </Grid>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Grid&gt;
    &lt;Grid.RowDefinitions&gt;
        &lt;RowDefinition Height="Auto" /&gt; &lt;!-- WinUI TitleBar --&gt;
        &lt;RowDefinition Height="*" /&gt; &lt;!-- App content --&gt;
    &lt;/Grid.RowDefinitions&gt;
    &lt;TitleBar x:Name="NavViewTitleBar"
              Title="NavView TitleBar"
              Background="Transparent"
              IsBackButtonVisible="True"
              IsBackEnabled="{Binding ElementName=NavFrame, Path=CanGoBack, Mode=OneWay}"
              IsPaneToggleButtonVisible="True"
              BackRequested="NavViewTitleBar_BackRequested"
              PaneToggleRequested="NavViewTitleBar_PaneToggleRequested">
        &lt;TitleBar.IconSource&gt;
            &lt;SymbolIconSource Symbol="Home" /&gt;
        &lt;/TitleBar.IconSource&gt;

        &lt;AutoSuggestBox x:Name="AutoSuggestBoxInNavViewTitleBar"
                        MinWidth="300"
                        MaxWidth="500"
                        Margin="8"
                        PlaceholderText="Search pictures, videos or places..."
                        QueryIcon="Find" /&gt;
    &lt;/TitleBar&gt;

    &lt;NavigationView x:Name="NavView"
                    Grid.Row="1"
                    IsPaneToggleButtonVisible="False"
                    IsBackButtonVisible="Collapsed"
                    SelectionChanged="NavigationView_SelectionChanged"
                    Height="400"&gt;

        &lt;!-- TitleBar with NavigationView L-Pattern Overwriting resources --&gt;
        &lt;NavigationView.Resources>
            &lt;Thickness x:Key="NavigationViewContentGridBorderThickness"&gt;1,1,0,0&lt;/Thickness&gt;
            &lt;!-- This is the rounded corner on the Top left of the L Pattern --&gt;
            &lt;CornerRadius x:Key="NavigationViewContentGridCornerRadius"&gt;8,0,0,0&lt;/CornerRadius&gt;
        &lt;/NavigationView.Resources&gt;

        &lt;Frame x:Name="NavFrame" /&gt;

        &lt;NavigationView.MenuItems&gt;
            &lt;NavigationViewItem Content="Home"
                                Icon="Home"
                                Tag="SamplePage1" /&gt;
            &lt;NavigationViewItem Content="Map"
                                Icon="Map"
                                Tag="SamplePage2" /&gt;
        &lt;/NavigationView.MenuItems&gt;
    &lt;/NavigationView&gt;
&lt;/Grid>
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
public MainWindow()
{
    this.InitializeComponent();

    // C# code to set AppTitleBar UIElement as Titlebar
    Window window = this; 
    window.ExtendsContentIntoTitleBar = true;  // Enable custom titlebar
    window.SetTitleBar(this.DefaultTitleBar);
}

// TitleBar BackRequested event handler bound to NavigationView Nav Frame.
private void NavViewTitleBar_BackRequested(TitleBar sender, object args)
{
    if (NavFrame.CanGoBack)
    {
        NavFrame.GoBack();
    }
}

// TitleBar PaneToggleRequested event handler bound to NavigationView back button.
private void NavViewTitleBar_PaneToggleRequested(TitleBar sender, object args)
{
    NavView.IsPaneOpen = !NavView.IsPaneOpen;
}

// NavigationView SelectionChanged event handler to navigate to selected sample pages.
private void NavigationView_SelectionChanged(Microsoft.UI.Xaml.Controls.NavigationView sender, Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs args)
{
    if (args.IsSettingsSelected)
    {
        NavFrame.Navigate(typeof(SampleSettingsPage));
    }
    else
    {
        var selectedItem = (Microsoft.UI.Xaml.Controls.NavigationViewItem)args.SelectedItem;
        string pageName = "WinUIGallery.SamplePages." + ((string)selectedItem.Tag);
        Type pageType = Type.GetType(pageName);

        NavFrame.Navigate(pageType, null, args.RecommendedNavigationTransitionInfo);
    }
}
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>


        <local:ControlExample HeaderText="Default Win32 titlebar"
                              CSharpSource="Window\TitleBar\TitleBarSample2.txt">
            <local:ControlExample.Example>
                <StackPanel Orientation="Vertical"
                            Spacing="10">
                    <TextBlock TextWrapping="WrapWholeWords">
                        WinUI provides a default Win32 titlebar if no user defined title bar is set.
                        <LineBreak /><LineBreak />
                        Use the button below to toggle between system title bar and user defined WinUI titlebar.
                    </TextBlock>
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Spacing="20">
                        <Button x:Name="ToggleTitleBarButton"
                                Click="ToggleTitleBar_Click">
                            Toggle Title
                        </Button>
                    </StackPanel>
                </StackPanel>
            </local:ControlExample.Example>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
// No user defined TitleBar is set for titlebar. Default Win32 title bar is created which extends to entire non-client area.
Window window = App.MainWindow;
window.ExtendsContentIntoTitleBar = true;
// window.SetTitleBar(null);  // Not setting any UIElement as title bar is the same as setting null as title bar.
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>

        <!-- Themeing is currently not available as TemplateBindings are not set up in TitleBar -->
        <local:ControlExample HeaderText="TitleBar Theming" IsEnabled="False">
            <local:ControlExample.Example>
                <StackPanel Orientation="Vertical"
                            Spacing="10">
                    <TextBlock TextWrapping="WrapWholeWords"
                               Foreground="{ThemeResource TextFillColorDisabledBrush}">
                        Themeing is currently not available as TemplateBindings are not set up in TitleBar.
                        <LineBreak /><LineBreak />
                        Toggle different colours for the background and foreground of the titlebar.
                    </TextBlock>
                </StackPanel>
            </local:ControlExample.Example>
            <local:ControlExample.Options>
                <StackPanel Spacing="12">
                    <TextBlock Foreground="{ThemeResource TextFillColorDisabledBrush}">Background Color</TextBlock>
                    <SplitButton x:Name="myBgColorButton"
                                 IsEnabled="False"
                                 AutomationProperties.Name="Background color"
                                 Padding="0"
                                 MinHeight="0"
                                 MinWidth="0"
                                 VerticalAlignment="Top"
                                 Margin="0,0,0,4">
                        <Border x:Name="BackgroundColorElement"
                                Width="{StaticResource SwatchSize}"
                                Height="{StaticResource SwatchSize}"
                                Background="Transparent"
                                Margin="0"
                                CornerRadius="4,0,0,4" />
                        <SplitButton.Flyout>
                            <Flyout Placement="Auto">
                                <GridView ItemClick="BgGridView_ItemClick"
                                          IsItemClickEnabled="True">
                                    <GridView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <ItemsWrapGrid MaximumRowsOrColumns="3"
                                                           Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </GridView.ItemsPanel>
                                    <GridView.Resources>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Width"
                                                    Value="{StaticResource SwatchSize}" />
                                            <Setter Property="Height"
                                                    Value="{StaticResource SwatchSize}" />
                                            <Setter Property="RadiusX"
                                                    Value="4" />
                                            <Setter Property="RadiusY"
                                                    Value="4" />
                                        </Style>
                                    </GridView.Resources>
                                    <GridView.Items>
                                        <Rectangle Fill="Transparent"
                                                   AutomationProperties.Name="Transparent" />
                                        <Rectangle Fill="Red"
                                                   AutomationProperties.Name="Red" />
                                        <Rectangle Fill="Orange"
                                                   AutomationProperties.Name="Orange" />
                                        <Rectangle Fill="Yellow"
                                                   AutomationProperties.Name="Yellow" />
                                        <Rectangle Fill="Green"
                                                   AutomationProperties.Name="Green" />
                                        <Rectangle Fill="Blue"
                                                   AutomationProperties.Name="Blue" />
                                        <Rectangle Fill="White"
                                                   AutomationProperties.Name="White" />
                                        <Rectangle Fill="Black"
                                                   AutomationProperties.Name="Black" />
                                    </GridView.Items>
                                </GridView>

                            </Flyout>
                        </SplitButton.Flyout>
                    </SplitButton>

                    <TextBlock Foreground="{ThemeResource TextFillColorDisabledBrush}">Foreground Color</TextBlock>
                    <SplitButton x:Name="myFgColorButton"
                                 IsEnabled="False"
                                 AutomationProperties.Name="Foreground color"
                                 Padding="0"
                                 MinHeight="0"
                                 MinWidth="0"
                                 VerticalAlignment="Top">
                        <Border x:Name="ForegroundColorElement"
                                Width="{StaticResource SwatchSize}"
                                Height="{StaticResource SwatchSize}"
                                Background="Transparent"
                                Margin="0"
                                CornerRadius="4,0,0,4" />
                        <SplitButton.Flyout>
                            <Flyout Placement="Auto">
                                <GridView ItemClick="FgGridView_ItemClick"
                                          IsItemClickEnabled="True">
                                    <GridView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <ItemsWrapGrid MaximumRowsOrColumns="3"
                                                           Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </GridView.ItemsPanel>
                                    <GridView.Resources>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Width"
                                                    Value="{StaticResource SwatchSize}" />
                                            <Setter Property="Height"
                                                    Value="{StaticResource SwatchSize}" />
                                            <Setter Property="RadiusX"
                                                    Value="4" />
                                            <Setter Property="RadiusY"
                                                    Value="4" />
                                        </Style>
                                    </GridView.Resources>
                                    <GridView.Items>
                                        <Rectangle Fill="Transparent"
                                                   AutomationProperties.Name="Transparent" />
                                        <Rectangle Fill="Red"
                                                   AutomationProperties.Name="Red" />
                                        <Rectangle Fill="Orange"
                                                   AutomationProperties.Name="Orange" />
                                        <Rectangle Fill="Yellow"
                                                   AutomationProperties.Name="Yellow" />
                                        <Rectangle Fill="Green"
                                                   AutomationProperties.Name="Green" />
                                        <Rectangle Fill="Blue"
                                                   AutomationProperties.Name="Blue" />
                                        <Rectangle Fill="White"
                                                   AutomationProperties.Name="White" />
                                        <Rectangle Fill="Black"
                                                   AutomationProperties.Name="Black" />
                                    </GridView.Items>
                                </GridView>

                            </Flyout>
                        </SplitButton.Flyout>
                    </SplitButton>
                </StackPanel>
            </local:ControlExample.Options>
        </local:ControlExample>

    </StackPanel>
</Page>
